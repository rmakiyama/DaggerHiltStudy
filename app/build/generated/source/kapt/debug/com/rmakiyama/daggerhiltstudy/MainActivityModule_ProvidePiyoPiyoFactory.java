// Generated by Dagger (https://dagger.dev).
package com.rmakiyama.daggerhiltstudy;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainActivityModule_ProvidePiyoPiyoFactory implements Factory<PiyoPiyo> {
  private final Provider<Piyo> piyoProvider;

  public MainActivityModule_ProvidePiyoPiyoFactory(Provider<Piyo> piyoProvider) {
    this.piyoProvider = piyoProvider;
  }

  @Override
  public PiyoPiyo get() {
    return providePiyoPiyo(piyoProvider.get());
  }

  public static MainActivityModule_ProvidePiyoPiyoFactory create(Provider<Piyo> piyoProvider) {
    return new MainActivityModule_ProvidePiyoPiyoFactory(piyoProvider);
  }

  public static PiyoPiyo providePiyoPiyo(Piyo piyo) {
    return Preconditions.checkNotNullFromProvides(MainActivityModule.INSTANCE.providePiyoPiyo(piyo));
  }
}
